name: Build
on: [workflow_dispatch]
jobs:
  build-osx:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, macos-latest-xlarge]
    steps:
      - uses: actions/checkout@v3
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 5.15.2
          modules: qtwebengine
          setup-python: false
          cache: true
      - name: Install mpv
        run: brew install mpv
      - name: Cache dependencies
        id: dependency-cache
        uses: actions/cache@v3
        with:
          path: ./dependencies
          key: dependencies-${{ hashFiles('mac/dependencies.sh') }}
      - name: Get dependencies
        if: steps.dependency-cache.outputs.cache-hit != 'true'
        run: |
          mkdir dependencies
          cd dependencies
          ../mac/dependencies.sh
      - name: Build
        run: ./bundle.sh
      - name: Create DMG
        run: npm_config_yes=true npx appdmg mac/dmg.json Stremio.dmg
      - name: Set artifact name
        if: matrix.os == 'macos-latest-xlarge'
        run: echo "ARTIFACT_NAME=osx-dmg-silicon" >> $GITHUB_ENV
      - name: Set artifact name
        if: matrix.os == 'macos-latest'
        run: echo "ARTIFACT_NAME=osx-dmg-intel" >> $GITHUB_ENV
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: Stremio.dmg
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 5.15.2
          modules: qtwebengine
          setup-python: false
          cache: true
      - name: Setup MSVC
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64
      - name: Install jom
        run: choco install jom
      - name: Cache dependencies
        id: dependency-cache
        uses: actions/cache@v3
        with:
          path: ./dependencies
          key: dependencies-${{ hashFiles('windows/dependencies.ps1') }}
      - name: Get dependencies
        if: steps.dependency-cache.outputs.cache-hit != 'true'
        run: |
          mkdir dependencies
          cd dependencies
          powershell -File ../windows/dependencies.ps1
      - name: Build
        run: powershell -File bundle.ps1
      - name: Create Setup
        uses: zhuzichu520/inno-setup-action@v1.0.0
        with:
          filepath: "./setup.iss"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-setup
          path: Output/stremio.exe
